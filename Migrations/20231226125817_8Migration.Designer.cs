// <auto-generated />
using System;
using BibliotecaAPI.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibliotecaAPI.Migrations
{
    [DbContext(typeof(LivroContext))]
    [Migration("20231226125817_8Migration")]
    partial class _8Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaAPI.Models.LivroCategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("DataCadastro")
                        .HasColumnType("text")
                        .HasColumnName("data_cadastro");

                    b.Property<int>("DataEdicao")
                        .HasColumnType("integer")
                        .HasColumnName("data_edicao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("UsuarioCadastro")
                        .HasColumnType("text")
                        .HasColumnName("usuario_cadastro");

                    b.Property<string>("UsuarioEdicao")
                        .HasColumnType("text")
                        .HasColumnName("usuario_edicao");

                    b.HasKey("Id");

                    b.ToTable("LivroCategorias");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("AnoEdicao")
                        .HasColumnType("integer")
                        .HasColumnName("ano_edicao");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("autor");

                    b.Property<int>("Codigo")
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("editora");

                    b.Property<string>("FotoPath")
                        .HasColumnType("text")
                        .HasColumnName("foto_path");

                    b.Property<int?>("LivroCategoriaModelId")
                        .HasColumnType("integer");

                    b.Property<int>("QtdReservas")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_reservas");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subtitulo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.Property<int>("livroCategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("livro_categoria_id");

                    b.Property<int?>("livro_categoria_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("LivroCategoriaModelId");

                    b.HasIndex("livroCategoriaId");

                    b.ToTable("Livros", t =>
                        {
                            t.Property("livro_categoria_id")
                                .HasColumnName("livro_categoria_id1");
                        });
                });

            modelBuilder.Entity("BibliotecaAPI.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroModel", b =>
                {
                    b.HasOne("BibliotecaAPI.Models.LivroCategoriaModel", null)
                        .WithMany("Livros")
                        .HasForeignKey("LivroCategoriaModelId");

                    b.HasOne("BibliotecaAPI.Models.LivroCategoriaModel", "livroCategoria")
                        .WithMany()
                        .HasForeignKey("livroCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("livroCategoria");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroCategoriaModel", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
