// <auto-generated />
using BibliotecaAPI.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibliotecaAPI.Migrations
{
    [DbContext(typeof(LivroContext))]
    partial class LivroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaAPI.Models.LivroCategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("DataCadastro")
                        .HasColumnType("text");

                    b.Property<int>("DataEdicao")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsuarioCadastro")
                        .HasColumnType("text");

                    b.Property<string>("UsuarioEdicao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LivroCategoriaModel");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("AnoEdicao")
                        .HasColumnType("integer");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Codigo")
                        .HasColumnType("integer");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoPath")
                        .HasColumnType("text");

                    b.Property<int>("QtdReservas")
                        .HasColumnType("integer");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("livroCategoriaId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("livroCategoriaId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroModel", b =>
                {
                    b.HasOne("BibliotecaAPI.Models.LivroCategoriaModel", "livroCategoria")
                        .WithMany()
                        .HasForeignKey("livroCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("livroCategoria");
                });
#pragma warning restore 612, 618
        }
    }
}
