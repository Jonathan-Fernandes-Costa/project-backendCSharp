// <auto-generated />
using System;
using BibliotecaAPI.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibliotecaAPI.Migrations
{
    [DbContext(typeof(LivroContext))]
    [Migration("20231229133024_New model livroCategorias")]
    partial class NewmodellivroCategorias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaAPI.Models.LivroCategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("LivroCategorias");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("AnoEdicao")
                        .HasColumnType("integer")
                        .HasColumnName("ano_edicao");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("autor");

                    b.Property<int>("Codigo")
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("DataUltimaAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_ultima_alteracao");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("editora");

                    b.Property<string>("FotoPath")
                        .HasColumnType("text")
                        .HasColumnName("foto_path");

                    b.Property<int>("LivroCategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("id_livro_categoria");

                    b.Property<int>("QtdReservas")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_reservas");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sinopse");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subtitulo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.Property<string>("UsuarioUltimaAlteracao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usuario_ultima_alteracao");

                    b.HasKey("id");

                    b.HasIndex("LivroCategoriaId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.LivroModel", b =>
                {
                    b.HasOne("BibliotecaAPI.Models.LivroCategoriaModel", "LivroCategoria")
                        .WithMany()
                        .HasForeignKey("LivroCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LivroCategoria");
                });
#pragma warning restore 612, 618
        }
    }
}
